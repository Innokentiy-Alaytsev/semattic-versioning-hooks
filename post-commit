#!/bin/sh

# Copyright (c) 2015 Alajcev Innokentij <alaitsev@gmail.com>

# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
# associated documentation files (the "Software"), to deal in the Software without restriction, 
# including without limitation the rights to use, copy, modify, merge, publish, distribute, 
# sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is 
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all copies or 
# substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
# NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT
# OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. 

__SOFTWARE_VERSION_MAJOR__="0"
__SOFTWARE_VERSION_MINOR__="1"
__SOFTWARE_VERSION_PATCH__="0"

latest_tag=`git describe --tags`

if [[ $latest_tag != "" ]] ; then
	project_version="$(echo $latest_tag | sed -e 's/\([0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/')"

	if [[ $project_version != "" ]] ; then
		echo "Version detected by latest tag"
		version_parts=(${project_version//./ })

		__SOFTWARE_VERSION_MAJOR__=${version_parts[0]}
		__SOFTWARE_VERSION_MINOR__=${version_parts[1]}
		__SOFTWARE_VERSION_PATCH__=${version_parts[2]}
	fi
fi

if [ ! -f version.h ]; then
	echo "version.h does not exist"
	echo "Creating default version.h with Version = $__SOFTWARE_VERSION_MAJOR__.$__SOFTWARE_VERSION_MINOR__.$__SOFTWARE_VERSION_PATCH__"
	echo -e "/* Version $__SOFTWARE_VERSION_MAJOR__.$__SOFTWARE_VERSION_MINOR__.$__SOFTWARE_VERSION_PATCH__ */\r\n#define __SOFTWARE_VERSION_MAJOR__ $__SOFTWARE_VERSION_MAJOR__\r\n#define __SOFTWARE_VERSION_MINOR__ $__SOFTWARE_VERSION_MINOR__\r\n#define __SOFTWARE_VERSION_PATCH__ $__SOFTWARE_VERSION_PATCH__" > version.h
fi

if ! git ls-files | grep -q version.h; then
	echo "version.h is not tracked. It will be added under git controll."

	git add version.h

	git commit --author="Alajcev Innokentij <alaitsev@gmail.com>" --message="Added version.h."
fi